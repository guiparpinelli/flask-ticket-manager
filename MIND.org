#+title: Tought process
#+author: Guilherme Parpinelli

** First look

  About the models:
  - *User*
    - *name*
    - *email*
    - *password* - make sure to hash it and create decrpyt method
    - *events* - list of events that user is admin

  - *Event*
    - *name*
    - *date*
    - *description* - optional
    - *max_tickets* - will define the total of generated tickets
    - *admin_id* - foreign key to parent ~User~
    - *tickets* - a list of generated tickets (one to many)
  
  - *Ticket*
    - *id*
    - *redeemed* - default ~False~
    - *event_id* - foreign key to parent ~Event~
    - *owner_id* - foreign key to parent ~User~

  I think this is a good place to start. Along with that, let's setup the core config.

    
** Setup

  - Create ~.env~ file with ~SECRET_APP_KEY~ (generated with ~secrets.token_bytes(32)~)
  - Create config classes (~config.py~)

** Routing

  - Root (~Home~)
    If user is not authenticated:
      - ~/register~
      - ~/login~

    If is auth:
      - ~/logout~
      Render ~events.html~ with list of current events
  
  - Events
    - ~/event/new~ - render new event form
    - ~/event/:name~ - render event details and tickets

    If user is the event admin:
      - ~/event/:name/edit~ - render event edit form

  - Tickets (API)
    - ~/redeem/:id~
      - ~GET~ - returns ~200 OK~ if ticket is not redeemed, ~410 GONE~ if has been redeemed
      - ~POST~ - attempts to reedem ticket

** Some known restrictions

  - [x] An event cannot reduce ~max_tickets~ below the total number of already redeemed tickets
  - [-] A ticket cannot be redeemed without an ~user.id~
      - [ ] Add check constraints to ~Ticket~ table
